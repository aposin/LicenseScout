<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.aposin.licensescout</groupId>
	<artifactId>licensescout-parent</artifactId>
	<version>1.4.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>LicenseScout Parent</name>
	<description>Common definitions for projects of LicenseScout</description>

	<url>http://www.aposin.org</url>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>pfistererm</id>
			<name>Matthias Pfisterer</name>
			<email>matthias.pfisterer@allianz.at</email>
			<url>https://github.com/pfistererm</url>
			<organization>APOSIN</organization>
			<organizationUrl>https://www.aposin.org/</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
				<role>maintainer</role>
			</roles>
			<timezone>Europe/Berlin</timezone>
		</developer>
		<developer>
			<id>d-gs</id>
			<name>Daniel Gómez Sánchez</name>
			<email>daniel.gomez-sanchez@allianz.at</email>
			<url>https://github.com/d-gs</url>
			<organization>APOSIN</organization>
			<organizationUrl>https://www.aposin.org/</organizationUrl>
			<roles>
				<role>maintainer</role>
				<role>developer</role>
			</roles>
			<timezone>Europe/Berlin</timezone>
		</developer>
		<developer>
			<id>holzerma</id>
			<name>Matthias Holzer</name>
			<email>matthias.holzer@allianz.at</email>
			<url>https://github.com/holzerma</url>
			<organization>APOSIN</organization>
			<organizationUrl>https://www.aposin.org/</organizationUrl>
			<roles>
				<role>project owner</role>
				<role>maintainer</role>
			</roles>
			<timezone>Europe/Berlin</timezone>
		</developer>
		<developer>
			<id>davu-all</id>
			<name>Davide Ceraso</name>
			<email>davide.ceraso@allianz.at</email>
			<url>https://github.com/davu-all</url>
			<organization>APOSIN</organization>
			<organizationUrl>https://www.aposin.org/</organizationUrl>
			<roles>
				<role>maintainer</role>
				<role>developer</role>
			</roles>
			<timezone>Europe/Berlin</timezone>
		</developer>
	</developers>

	<properties>
		<!-- input and output encoding definitions -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- ================================ -->
		<!-- Dependencies version definitions -->
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<commons-codec.version>1.14</commons-codec.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<commons-csv.version>1.8</commons-csv.version>
		<commons-lang3.version>3.9</commons-lang3.version>
		<commons-io.version>2.6</commons-io.version>
		<doxia-sink-api.version>1.9</doxia-sink-api.version>
		<doxia-core.version>1.9</doxia-core.version>
		<doxia-site-renderer.version>1.9.1</doxia-site-renderer.version>
		<doxia-decoration-model.version>1.9.1</doxia-decoration-model.version>
		<jaxb-api.version>2.3.2</jaxb-api.version>
		<junit.version>4.13.1</junit.version>
		<json.version>20190722</json.version>
		<maven-core.version>3.6.0</maven-core.version>
		<maven-model.version>3.6.0</maven-model.version>
		<maven-plugin-annotations.version>3.6.0</maven-plugin-annotations.version>
		<maven-plugin-api.version>3.6.0</maven-plugin-api.version>
		<maven-reporting-api.version>3.0</maven-reporting-api.version>
		<maven-reporting-impl.version>3.0.0</maven-reporting-impl.version>
		<maven-resolver.version>1.4.1</maven-resolver.version>
		<maven-shared-utils.version>3.3.3</maven-shared-utils.version>
		<org.eclipse.aether.version>1.1.0</org.eclipse.aether.version>
		<plexus-utils.version>3.1.1</plexus-utils.version>
		<velocity.version>2.1</velocity.version>

		<!-- Test dependencies version definitions -->
		<org.jsoup.version>1.12.1</org.jsoup.version>

		<!-- ================================ -->
		<!-- Maven plugin version definitions -->

		<!-- groupId: com.mycila -->
		<license-maven-plugin.version>3.0</license-maven-plugin.version>

		<!-- groupId: org.asciidoctor -->
		<asciidoctor-maven-plugin.version>1.6.0</asciidoctor-maven-plugin.version>

		<!-- groupId: org.apache.maven.plugins -->
		<maven-assembly-plugin.version>3.1.1</maven-assembly-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<maven-invoker-plugin.version>3.2.1</maven-invoker-plugin.version>
		<maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
		<maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
		<maven-jar-plugin.version>2.4</maven-jar-plugin.version>
		<maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
		<maven-plugin-plugin.version>3.6.0</maven-plugin-plugin.version>
		<maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-scm-plugin.version>1.11.2</maven-scm-plugin.version>
		<maven-scm-publish-plugin.version>3.0.0</maven-scm-publish-plugin.version>
		<maven-site-plugin.version>3.8.2</maven-site-plugin.version>
		<maven-source-plugin.version>3.2.0</maven-source-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M4</maven-surefire-plugin.version>
		<maven-surefire-report-plugin.version>3.0.0-M4</maven-surefire-report-plugin.version>

		<!-- groupId: org.codehaus.mojo -->
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
		<flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>
		<versions-maven-plugin.version>2.7</versions-maven-plugin.version>

		<!-- groupId: org.jacoco -->
		<jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>

		<!-- groupId: org.sonatype.plugins -->
		<nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>

		<license-maven-plugin.version>3.0</license-maven-plugin.version>
		<org.dbunit.version>2.6.0</org.dbunit.version>
		<com.h2database.version>1.4.200</com.h2database.version>

		<!-- ==================== -->
		<!-- Compiler definitions -->

		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.compiler.release>${java.version}</maven.compiler.release>

		<!-- Github upload/publish -->
		<github.owner>aposin</github.owner>
		<siteStagingDirectory>${java.io.tmpdir}/licensescout-site-stage</siteStagingDirectory>
		<siteBranch>gh-pages</siteBranch>
	</properties>

	<organization>
		<name>Association for the promotion of open-source insurance software and for the establishment of open interface standards in the insurance industry (Verein zur Förderung quelloffener Versicherungssoftware und Etablierung offener Schnittstellenstandards in der Versicherungsbranche)</name>
		<url>http://www.aposin.org</url>
	</organization>

	<inceptionYear>2019</inceptionYear>

	<issueManagement>
		<system>Github</system>
		<url>https://github.com/aposin/LicenseScout/issues</url>
	</issueManagement>

	<scm>
		<url>https://github.com/aposin/LicenseScout/tree/master</url>
		<connection>scm:git:https://github.com/aposin/LicenseScout.git</connection>
		<developerConnection>scm:git:git@github.com:aposin/LicenseScout.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<dependencyManagement>

		<dependencies>

			<!-- groupId: commons-codec -->
			<!-- NOTE: locking this transitive dependency due to a security issue: -->
			<!-- https://snyk.io/vuln/SNYK-JAVA-COMMONSCODEC-561518 -->

			<!-- Introduced through: org.aposin.licensescout:licensescout-report-maven-plugin@1.4.${revision} -->
			<!-- › org.apache.maven.doxia:doxia-core@1.9 › org.apache.httpcomponents:httpclient@4.5.8 -->
			<!-- › commons-codec:commons-codec@1.11 -->

			<!-- Newer versions of doxia and httpclient -->
			<!-- still depend on the same version of commons-codec, so locking the -->
			<!-- version of the transitive dependency is currently the only possible -->
			<!-- solution. -->
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>

			<!-- groupId: org.apache.maven -->
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-core</artifactId>
				<version>${maven-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-model</artifactId>
				<version>${maven-model.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>${maven-plugin-api.version}</version>
			</dependency>

			<!-- groupId: org.apache.maven.plugin-tools -->
			<dependency>
				<groupId>org.apache.maven.plugin-tools</groupId>
				<artifactId>maven-plugin-annotations</artifactId>
				<version>${maven-plugin-annotations.version}</version>
			</dependency>

			<!-- groupId: org.apache.maven.reporting -->
			<dependency>
				<groupId>org.apache.maven.reporting</groupId>
				<artifactId>maven-reporting-api</artifactId>
				<version>${maven-reporting-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.reporting</groupId>
				<artifactId>maven-reporting-impl</artifactId>
				<version>${maven-reporting-impl.version}</version>
			</dependency>

			<!-- groupId: org.apache.maven.shared -->
			<dependency>
				<groupId>org.apache.maven.shared</groupId>
				<artifactId>maven-shared-utils</artifactId>
				<version>${maven-shared-utils.version}</version>
			</dependency>

			<!-- groupId: org.codehaus.plexus -->
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-utils</artifactId>
				<version>${plexus-utils.version}</version>
			</dependency>

			<!-- groupId: org.json -->
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${json.version}</version>
			</dependency>

			<!-- groupId: commons-io -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<!-- groupId: org.apache.commons -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-csv</artifactId>
				<version>${commons-csv.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>

			<!-- groupId: org.apache.velocity -->
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity-engine-core</artifactId>
				<version>${velocity.version}</version>
			</dependency>

			<!-- groupId: jakarta.xml.bind -->
			<dependency>
				<groupId>jakarta.xml.bind</groupId>
				<artifactId>jakarta.xml.bind-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>

			<!-- groupId: commons-beanutils -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>

			<!-- groupId: org.apache.maven.doxia -->
			<dependency>
				<groupId>org.apache.maven.doxia</groupId>
				<artifactId>doxia-core</artifactId>
				<version>${doxia-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.doxia</groupId>
				<artifactId>doxia-decoration-model</artifactId>
				<version>${doxia-decoration-model.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.doxia</groupId>
				<artifactId>doxia-sink-api</artifactId>
				<version>${doxia-sink-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.doxia</groupId>
				<artifactId>doxia-site-renderer</artifactId>
				<version>${doxia-site-renderer.version}</version>
			</dependency>

			<!-- groupId: org.apache.maven.resolver -->
			<dependency>
				<groupId>org.apache.maven.resolver</groupId>
				<artifactId>maven-resolver-api</artifactId>
				<version>${maven-resolver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.resolver</groupId>
				<artifactId>maven-resolver-impl</artifactId>
				<version>${maven-resolver.version}</version>
			</dependency>

			<!-- Test dependencies -->

			<!-- groupId: com.h2database -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${com.h2database.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- groupId: junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- groupId: org.dbunit -->
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>${org.dbunit.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- groupId: org.jsoup -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${org.jsoup.version}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- groupId: com.mycila -->
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<aggregate>true</aggregate>
						<header>src/etc/LICENSE_header.txt</header>
						<includes>
							<!-- include all sources -->
							<include>src/**</include>
						</includes>
						<excludes>
							<exclude>**/*.xml</exclude>
							<exlucde>**/*.txt</exlucde>
							<exclude>**/*.csv</exclude>
							<exclude>**/*.pom</exclude>
						</excludes>
						<properties>
							<year>2019</year>
							<owner>${project.organization.name}</owner>
						</properties>
						<mapping>
							<adoc>DOUBLESLASH_STYLE</adoc>
						</mapping>
					</configuration>
				</plugin>

				<!-- groupId: org.apache.maven.plugins -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<!-- This execution is only activated (by referencing its ID) in submodules 
								that use unit tests with 'maven-surefire-plugin'. -->
							<id>jacoco-file-check</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<phase>test</phase>
							<configuration>
								<rules>
									<requireFilesExist>
										<files>
											<file>${project.build.directory}/jacoco.exec</file>
										</files>
										<message>Jacoco result file ('target/jacoco.exec') is missing!</message>
									</requireFilesExist>
								</rules>
								<fail>true</fail>
								<skip>${skipTests}</skip>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<configuration>
						<!-- 'gpg.keyname' should be defined as property in settins.xml -->
						<gpg.keyname>${gpg.keyname}</gpg.keyname>
					</configuration>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-invoker-plugin</artifactId>
					<version>${maven-invoker-plugin.version}</version>
					<configuration>
						<projectsDirectory>src/it</projectsDirectory>
						<pomIncludes>
							<pomInclude>**/pom.xml</pomInclude>
						</pomIncludes>
						<postBuildHookScript>verify</postBuildHookScript>
						<settingsFile>src/it/settings.xml</settingsFile>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<quiet>true</quiet>
						<doclint>none</doclint>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${maven-jxr-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven-plugin-plugin.version}</version>
					<configuration>
						<extractors>
							<extractor>java-annotations</extractor>
						</extractors>
						<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven-project-info-reports-plugin.version}</version>
					<configuration>
						<dependencyDetailsEnabled>true</dependencyDetailsEnabled>
						<dependencyLocationsEnabled>true</dependencyLocationsEnabled>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-scm-plugin</artifactId>
					<version>${maven-scm-plugin.version}</version>
					<configuration>
						<connectionType>connection</connectionType>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-publish-plugin</artifactId>
					<version>${maven-scm-publish-plugin.version}</version>
					<configuration>
						<scmBranch>${siteBranch}</scmBranch>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.asciidoctor</groupId>
							<artifactId>asciidoctor-maven-plugin</artifactId>
							<version>${asciidoctor-maven-plugin.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<skipDeploy>true</skipDeploy>
						<stagingDirectory>${siteStagingDirectory}</stagingDirectory>
						<generateReports>true</generateReports>
						<generateSitemap>true</generateSitemap>

						<asciidoc>
							<!-- optional site-wide AsciiDoc attributes -->
							<attributes>
								<icons>font</icons>
								<source-highlighter>coderay</source-highlighter>
								<coderay-css>style</coderay-css>
								<toclevels>4</toclevels>
							</attributes>
						</asciidoc>
					</configuration>
					<executions>
						<!-- this is important to enable inheritance of site descriptors -->
						<execution>
							<id>attach-descriptor</id>
							<goals>
								<goal>attach-descriptor</goal>
							</goals>
							<phase>pre-site</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<!-- <configuration> <argLine> -illegal-access=permit </argLine> </configuration> -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-report-plugin.version}</version>
					<configuration>
						<aggregate>true</aggregate>
						<!--also set this to link to generated source reports -->
						<linkXRef>true</linkXRef>
					</configuration>
				</plugin>

				<!-- groupId: org.codehaus.mojo -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
					<configuration>
						<updatePomFile>true</updatePomFile>
						<flattenMode>ossrh</flattenMode>
					</configuration>
					<executions>
						<execution>
							<id>flatten</id>
							<phase>process-resources</phase>
							<goals>
								<goal>flatten</goal>
							</goals>
						</execution>
						<execution>
							<id>flatten.clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
				</plugin>

				<!-- groupId: org.jacoco -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
				</plugin>

				<!-- groupId: org.sonatype.plugins -->
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>
			</plugins>

		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-publish-plugin</artifactId>
				<configuration>
					<content>${siteStagingDirectory}</content>
				</configuration>
				<executions>
					<execution>
						<id>scm-publish</id>
						<phase>site-deploy</phase>
						<goals>
							<goal>publish-scm</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<executions>
					<execution>
						<id>stage-for-scm-publish</id>
						<phase>post-site</phase>
						<goals>
							<goal>stage</goal>
						</goals>
						<configuration>
							<skipDeploy>false</skipDeploy><!-- MSITE-652: configuration won't 
								be necessary with m-site-p 3.2 -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<site>
			<id>${project.artifactId}-site</id>
			<url>scm:git:ssh://git@github.com/${github.owner}/LicenseScout.git</url>
		</site>
	</distributionManagement>

	<reporting>
		<plugins>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jxr-plugin</artifactId> 
				<reportSets> <reportSet> <id>aggregate</id> <inherited>false</inherited> 
				<reports> <report>aggregate</report> <report>test-aggregate</report> </reports> 
				</reportSet> </reportSets> </plugin> -->
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>snapshot-release</id>

			<build>
				<plugins>
					<!-- For snapshot uploads enable maven-deploy-plugin. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>

					<!-- Use signing of artifacts. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>parse-version</goal>
								</goals>
								<phase>initialize</phase>
							</execution>
						</executions>
					</plugin>

					<!-- Build a source JAR. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>

					<!-- Build JavaDoc JAR. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>release-javadoc</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<doclint>none</doclint>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Use signing of artifacts. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>

					<!-- Do POM flattening -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>flatten-maven-plugin</artifactId>
					</plugin>

					<!-- tag the GIT repository -->
					<plugin>
						<artifactId>maven-scm-plugin</artifactId>
						<executions>
							<execution>
								<id>release-tag</id>
								<phase>deploy</phase>
								<goals>
									<goal>tag</goal>
								</goals>
								<!-- NOTE: not inherited to child POMs to make sure the tagging is 
									executed only once. -->
								<inherited>false</inherited>
								<configuration>
									<tag>V${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${revision}</tag>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>github-upload</id>
			<build>
				<plugins>
					<plugin>
						<groupId>de.jutzig</groupId>
						<artifactId>github-release-plugin</artifactId>
						<version>1.4.0</version>
						<configuration>
							<description>Description of your release</description>
							<releaseName>1.0 Final</releaseName>
							<tag>${project.version}</tag>

							<!-- If your project has additional artifacts, such as ones produced 
								by the maven-assembly-plugin, you can define the following (requires version 
								1.1.1 of the plugin or higher): -->
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>${project.artifactId}*.jar</include>
									</includes>
								</fileSet>
							</fileSets>
						</configuration>
						<executions>
							<execution>
								<id>github-upload</id>
								<phase>install</phase>
								<goals>
									<goal>release</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Modules to build in the CI build. -->
			<id>ci-modules</id>

			<modules>
				<module>../licensescout-core</module>
				<module>../licensescout-maven-utils</module>
				<module>../licensescout-maven-plugin</module>
				<module>../licensescout-report-maven-plugin</module>
			</modules>
		</profile>

		<profile>
			<!-- Modules with site documentation. -->
			<id>site-modules</id>

			<modules>
				<module>../licensescout-documentation</module>
				<module>../licensescout-core</module>
				<module>../licensescout-maven-utils</module>
				<module>../licensescout-maven-plugin</module>
				<module>../licensescout-report-maven-plugin</module>
			</modules>
		</profile>

		<profile>
			<!-- Modules that are released. -->
			<id>release-modules</id>

			<modules>
				<module>../licensescout-core/</module>
				<module>../licensescout-maven-utils</module>
				<module>../licensescout-maven-plugin/</module>
				<module>../licensescout-report-maven-plugin/</module>
				<module>../org.aposin.licensescout.configuration.sample/</module>
			</modules>
		</profile>

		<profile>
			<!-- Modules to build in the CI build as prerequisite for integration 
				tests. -->
			<id>ci-for-it-modules</id>

			<modules>
				<module>../licensescout-core</module>
				<module>../licensescout-maven-utils</module>
				<module>../licensescout-maven-plugin</module>
				<module>../licensescout-report-maven-plugin</module>
				<module>../org.aposin.licensescout.configuration.sample</module>
			</modules>
		</profile>

		<profile>
			<!-- Modules containing integration tests. -->
			<id>it-modules</id>

			<modules>
				<module>../licensescout-maven-plugin/</module>
				<module>../licensescout-report-maven-plugin/</module>
			</modules>
		</profile>

		<profile>
			<!-- Modules that should be checked for license headers by com.mycila:license-maven-plugin -->
			<id>license-header-modules</id>

			<modules>
				<module>../licensescout-core/</module>
				<module>../licensescout-documentation/</module>
				<module>../licensescout-maven-utils</module>
				<module>../licensescout-maven-plugin</module>
				<module>../licensescout-report-maven-plugin/</module>
			</modules>
		</profile>

		<profile>
			<!-- Cleans the global site staging directory -->
			<id>clean-site-staging</id>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<executions>
							<execution>
								<id>clean-site-staging</id>
								<inherited>false</inherited>
								<goals>
									<goal>clean</goal>
								</goals>
								<phase>pre-site</phase>
								<configuration>
									<filesets>
										<fileset>
											<directory>${siteStagingDirectory}</directory>
											<followSymlinks>false</followSymlinks>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Profile for integration tests. -->
			<id>run-its</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>only-eclipse</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>

			<build>
				<pluginManagement>
					<plugins>
						<!--This plugin's configuration is used to store Eclipse m2e settings 
							only. It has no influence on the Maven build itself. -->
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>
													org.apache.maven.plugins
												</groupId>
												<artifactId>
													maven-plugin-plugin
												</artifactId>
												<versionRange>[3.2,)</versionRange>
												<goals>
													<goal>descriptor</goal>
													<goal>helpmojo</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore></ignore>
											</action>
										</pluginExecution>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>build-helper-maven-plugin</artifactId>
												<versionRange>[${build-helper-maven-plugin.version},)</versionRange>
												<goals>
													<goal>regex-properties</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore></ignore>
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

</project>
